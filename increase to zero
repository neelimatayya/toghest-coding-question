Given an array of N non-negative integers A1, A2,..., A. In one operation, you can increase any one of the elements by 1.

Find the minimum number of operations needed to make the XOR of all elements (A1⊕A2⊕..⊕Ax) equal to 0. Here ⊕ denotes the bitwise OR operation.

Input Format

The first line of input contains one integer T-the number of test cases. Descriptions of T test cases follow. The first line of each test case contains one integer N-the size of the array. The second line of each test case

contains N integers A1,A2,..., An -the elements of the array.

Output Format

For each test case, print one number-the minimum number of operations required to make the array X0R equal

to 0. It can be shown that it is always possible.

Constraints

1<=T<= 100

2<= N<= 10(^6)

∑N≤10(^6)

0≤Ai <2^(60) 

Subtasks

Subtask 1 (10 points): 2≤ N ≤5, Ai<2^4

Subtask 2 (20 points): 2≤N≤ 100, ∑N≤ 1000, Ai<2^7

Subtask 3 (10 points): 2≤ N ≤7, ∑NS 100, Ai<2^60

Subtask 4 (10 points): 2≤ N ≤13, ∑N≤ 100, Ai<2^60

Subtask 5 (25 points): 2≤ N ≤ 1000, ∑N≤ 10000, Ai<2^30

Subtask 6 (15 points): 2≤ N ≤ 10^6. ∑N≤ 10^6,  Ai<2^30

Subtask 7 (10 points): Original constraints

Sample 1:
Input
4
3
3 4 5
4
5 3 0 7
3
2 3 1
5
7 7 7 7 7

OUTPUT:
2
1
0
9
